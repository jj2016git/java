tomcat servlet注册
tomcat请求处理流程
org.apache.catalina.connector.Connector#startInternal: protocolHandler.start();
->　org.apache.coyote.AbstractProtocol#start: endpoint.start();
	－> org.apache.tomcat.util.net.AbstractEndpoint#start: 模板方法，
		-> 调用org.apache.tomcat.util.net.Nio2Endpoint#bind() 创建ServerSocketChannel并绑定端口
		-> 调用org.apache.tomcat.util.net.Nio2Endpoint#startInternal() 继续初始化，开始Acceptor线程
			-> org.apache.tomcat.util.net.Nio2Endpoint.Acceptor#run(): socket = serverSock.accept().get();setSocketOptions(socket);
				-> org.apache.tomcat.util.net.AbstractEndpoint#processSocket
					-> org.apache.tomcat.util.net.SocketProcessorBase#run
						-> org.apache.tomcat.util.net.Nio2Endpoint.SocketProcessor#doRun: state = getHandler().process(socketWrapper, event);
							-> org.apache.coyote.AbstractProcessorLight#process: state = service(socketWrapper);
								-> org.apache.catalina.connector.CoyoteAdapter#service: connector.getService().getContainer().getPipeline().getFirst().invoke(
                        request, response); 
									-> org.apache.catalina.core.StandardEngineValve#invoke
										-> org.apache.catalina.core.StandardHostValve#invoke
											-> org.apache.catalina.core.StandardContextValve#invoke
												-> org.apache.catalina.core.StandardWrapperValve#invoke
													-> ApplicationFilterChain filterChain =
                ApplicationFilterFactory.createFilterChain(request, wrapper, servlet);
													-> filterChain.doFilter(request.getRequest(),
                                    response.getResponse());
														-> javax.servlet.Servlet#service
											
							